package knex;

typedef Select<TRecord, TResult> = ts.AnyOf12<() -> QueryBuilder<TRecord, TResult>, (subQueryBuilders:haxe.extern.Rest<QueryBuilder<Any, Any>>) -> QueryBuilder<TRecord, Any>, (subQueryBuilders:Array<QueryBuilder<Any, Any>>) -> QueryBuilder<TRecord, Any>, (aliases:haxe.extern.Rest<Any>) -> QueryBuilder<TRecord, Any>, (aliases:Any) -> QueryBuilder<TRecord, Any>, (aliases:haxe.extern.Rest<Any>) -> QueryBuilder<TRecord, Any>, (aliases:Any) -> QueryBuilder<TRecord, Any>, (columnName:String) -> QueryBuilder<TRecord, Array<DeferredKeySelection<TRecord, String, Bool, { }, Bool, { }, Any>>>, (columnNames:haxe.extern.Rest<Any>) -> QueryBuilder<TRecord, Any>, (columnNames:Array<Any>) -> QueryBuilder<TRecord, Any>, (columnNames:haxe.extern.Rest<ColumnDescriptor<TRecord, TResult>>) -> QueryBuilder<TRecord, Any>, (columnNames:Array<ColumnDescriptor<TRecord, TResult>>) -> QueryBuilder<TRecord, Any>>;